import vercel from '@sveltejs/adapter-vercel';
import preprocess from 'svelte-preprocess';
import env from './env.config.js';

const production = env.production;

/** @type {import('@sveltejs/kit').Config} */
const config = {
	compilerOptions: {
		accessors: !!process.env.VITEST
	},
	preprocess: [
		preprocess({
			postcss: true,
			sourceMap: !production,
			replace: [
				// Support preprocessor conditional code
				// which allows us to remove/replace content from production build
				// NOTE: The order IS important, the keywords NEED to be different
				[/<!--#when dev-->(.+?)<!--:else-->(.+?)<!--\/when-->/is, production ? '$2' : '$1'],
				[/<!--#if dev-->(.*?)<!--\/if-->/is, production ? '' : '$1'],
				[/<!--#ifnot dev-->(.*?)<!--\/ifnot-->/is, production ? '$1' : ''],
				[/\/\/#when dev(.+?)\/\/:else(.+?)\/\/\/when/is, production ? '$2' : '$1'],
				[/\/\/#if dev(.*?)\/\/\/if/is, production ? '' : '$1'],
				[/\/\/#ifnot dev(.*?)\/\/\/ifnot/is, production ? '$1' : '']
			]
		})
	],
	kit: {
		adapter: vercel({
			runtime: 'edge'
		}),
		alias: {
			$com: 'src/lib/components',
			$gql: 'src/lib/server/graphql',
			// Since `baseUrl` is not set in the tsconfig generated by Sveltekit, we need this alias
			// so that we can import craft types without relative paths.
			'src/craft': 'src/craft'
		},
		output: {
			preloadStrategy: 'preload-mjs'
		},
		version: {
			pollInterval: 3600 * 2 // Poll every 2 minutes
		}
	},
	vitePlugin: {
		inspector: !production
	}
};

export default config;
